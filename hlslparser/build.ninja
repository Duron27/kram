

vulkanSDK=/Users/Alec/devref/vulkansdk/1.3.239.0/macOS/bin/
projectDir=/Users/Alec/devref/kram/hlslparser/
appBuildDir =./build/hlslparser/Build/Products/Release/

hlslparser = ${appBuildDir}hlslparser

#------

metalCompile = xcrun -sdk macosx metal
metalLib = xcrun -sdk macosx metallib
metalLibStrip = xcrun -sdk macosx metal-dsymutil

# src files
srcDir = ${projectDir}shaders/

# headers and parser gen shaders
intDir = ${projectDir}outshaders/

# compiled shader per platform
dstDir = ${projectDir}out/mac/

# turn on file/line directives to jump back to original sources
# and turn on comments in generated sources
flagsParser = -g -line

# this makes metallib 3x bigger, but not optimized
#flagsMSLDebug = -g

# this allows Xcode to load the sym file
flagsMSLDebug = -frecord-sources

# target MSL2.3 for now on macOS
flagsMSL = -std=macos-metal2.3 -Werror

# this seems to gen weird warnings
#

# for iOS
# -std=ios-metal2.3
    
# hlslparser msl codegen
rule genMSL
    command = $hlslparser $flagsParser -i $in -o $out

# compile to .air
rule compileMSL
    command = $metalCompile $flagsMSLDebug $flagsMSL -c $in -o $out

# https://developer.apple.com/documentation/metal/shader_libraries/compiling_shader_code_into_a_library_with_metal_s_command-line_tools?language=objc
# linker to metallib
rule linkMSL
    command = $metalLib -o $out $in

# strip metallib and gen metlalibsym
rule stripMSL
    command = $metalLibStrip -flat -remove-source $in

dependsMSL = ${intDir}/ShaderMSL.h

# gen air
build ${intDir}Skinning.metal: genMSL ${srcDir}Skinning.hlsl | ${dependsMSL}
build ${intDir}Sample.metal: genMSL ${srcDir}Sample.hlsl | ${dependsMSL}
build ${intDir}Compute.metal: genMSL ${srcDir}Compute.hlsl | ${dependsMSL}

build ${dstDir}Skinning.air: compileMSL ${intDir}Skinning.metal
build ${dstDir}Sample.air: compileMSL ${intDir}Sample.metal
build ${dstDir}Compute.air: compileMSL ${intDir}Compute.metal

# gen metallib (87K)
build ${dstDir}GameShaders.metallib: linkMSL ${dstDir}Skinning.air ${dstDir}Sample.air ${dstDir}Compute.air

# this is getting run every time since it strips the metallib, how to prevent that
# also can compile all metal files into both metallib and dsycm
# this also doesn't make metallib any smaller, but is supposed to strip it
# goes from 299K down to 273K, but seems like it should go smaller
# with no debug flags, 87K and sym is 80K w/o debug, prob should skip gen of sym file
# if not in debug

# gen metallibsym
build ${dstDir}GameShaders.metallibsym: stripMSL ${dstDir}GameShaders.metallib

#-------

dxc = ${vulkanSDK}dxc

# flagsDXDebug = -Zi
flagsDXDebug =

flagsDXC = -nologo -Zpc -enable-16bit-types -HV 2021 -Werror -fspv-extension=SPV_KHR_shader_draw_parameters -spirv -fspv-target-env=vulkan1.2

flagsVS = -T vs_6_2
flagsPS = -T ps_6_2
flagsCS = -T cs_6_2

dependsHLSL = ${intDir}/ShaderHLSL.h

dstDirHLSL = ${projectDir}out/android/

# hlslparser hlsl/msl codegen
rule genHLSL
  command = $hlslparser $flagsParser -i $in -o $out

# this will get shadow replaced
entryPoint = Foo

# compile to spirv
rule compileVS
  command = $dxc $flagsDXC $flagsVS -E ${entryPoint}VS -Fo $out $in
rule compilePS
  command = $dxc $flagsDXC $flagsPS -E ${entryPoint}PS -Fo $out $in
rule compileCS
  command = $dxc $flagsDXC $flagsCS -E ${entryPoint}CS -Fo $out $in

rule archiveSpriv
  command = zip -r $out $in

# gen hlsl
build ${intDir}Skinning.hlsl: genHLSL ${srcDir}Skinning.hlsl | ${dependsHLSL}
build ${intDir}Sample.hlsl: genHLSL ${srcDir}Sample.hlsl | ${dependsHLSL}
build ${intDir}Compute.hlsl: genHLSL ${srcDir}Compute.hlsl | ${dependsHLSL}

# gen spv
build ${dstDirHLSL}Skinning.vert.spv: compileVS ${intDir}Skinning.hlsl
    entryPoint = Skinning
    
build ${dstDirHLSL}Skinning.frag.spv: compilePS ${intDir}Skinning.hlsl
    entryPoint = Skinning
        
build ${dstDirHLSL}Sample.vert.spv: compileVS ${intDir}Sample.hlsl
    entryPoint = Sample
    
build ${dstDirHLSL}Sample.frag.spv: compilePS ${intDir}Sample.hlsl
    entryPoint = Sample
    
build ${dstDirHLSL}Compute.comp.spv: compileCS ${intDir}Compute.hlsl
    entryPoint = Compute

# TODO: use strip command to gen pdb for each file, may only apply to DXIL

# TODO: could zip spv to single archive (6k)
build ${dstDirHLSL}GameShaders.zip: archiveSpriv ${dstDirHLSL}Skinning.vert.spv ${dstDirHLSL}Skinning.frag.spv ${dstDirHLSL}Sample.vert.spv ${dstDirHLSL}Sample.frag.spv ${dstDirHLSL}Compute.comp.spv


